// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_data_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_data_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_data_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_data_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_2eproto;
namespace com {
namespace coderzeng {
namespace protobuf {
namespace data {
class Protos;
class ProtosDefaultTypeInternal;
extern ProtosDefaultTypeInternal _Protos_default_instance_;
class Protos_MessageInfo;
class Protos_MessageInfoDefaultTypeInternal;
extern Protos_MessageInfoDefaultTypeInternal _Protos_MessageInfo_default_instance_;
}  // namespace data
}  // namespace protobuf
}  // namespace coderzeng
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::coderzeng::protobuf::data::Protos* Arena::CreateMaybeMessage<::com::coderzeng::protobuf::data::Protos>(Arena*);
template<> ::com::coderzeng::protobuf::data::Protos_MessageInfo* Arena::CreateMaybeMessage<::com::coderzeng::protobuf::data::Protos_MessageInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace coderzeng {
namespace protobuf {
namespace data {

// ===================================================================

class Protos_MessageInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.coderzeng.protobuf.data.Protos.MessageInfo) */ {
 public:
  Protos_MessageInfo();
  virtual ~Protos_MessageInfo();

  Protos_MessageInfo(const Protos_MessageInfo& from);
  Protos_MessageInfo(Protos_MessageInfo&& from) noexcept
    : Protos_MessageInfo() {
    *this = ::std::move(from);
  }

  inline Protos_MessageInfo& operator=(const Protos_MessageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Protos_MessageInfo& operator=(Protos_MessageInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Protos_MessageInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Protos_MessageInfo* internal_default_instance() {
    return reinterpret_cast<const Protos_MessageInfo*>(
               &_Protos_MessageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Protos_MessageInfo& a, Protos_MessageInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Protos_MessageInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Protos_MessageInfo* New() const final {
    return CreateMaybeMessage<Protos_MessageInfo>(nullptr);
  }

  Protos_MessageInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Protos_MessageInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Protos_MessageInfo& from);
  void MergeFrom(const Protos_MessageInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Protos_MessageInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.coderzeng.protobuf.data.Protos.MessageInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_2eproto);
    return ::descriptor_table_data_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // @@protoc_insertion_point(class_scope:com.coderzeng.protobuf.data.Protos.MessageInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_2eproto;
};
// -------------------------------------------------------------------

class Protos :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.coderzeng.protobuf.data.Protos) */ {
 public:
  Protos();
  virtual ~Protos();

  Protos(const Protos& from);
  Protos(Protos&& from) noexcept
    : Protos() {
    *this = ::std::move(from);
  }

  inline Protos& operator=(const Protos& from) {
    CopyFrom(from);
    return *this;
  }
  inline Protos& operator=(Protos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Protos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Protos* internal_default_instance() {
    return reinterpret_cast<const Protos*>(
               &_Protos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Protos& a, Protos& b) {
    a.Swap(&b);
  }
  inline void Swap(Protos* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Protos* New() const final {
    return CreateMaybeMessage<Protos>(nullptr);
  }

  Protos* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Protos>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Protos& from);
  void MergeFrom(const Protos& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Protos* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.coderzeng.protobuf.data.Protos";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_2eproto);
    return ::descriptor_table_data_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Protos_MessageInfo MessageInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kMessageInfoFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // repeated .com.coderzeng.protobuf.data.Protos.MessageInfo messageInfo = 2;
  int messageinfo_size() const;
  private:
  int _internal_messageinfo_size() const;
  public:
  void clear_messageinfo();
  ::com::coderzeng::protobuf::data::Protos_MessageInfo* mutable_messageinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::coderzeng::protobuf::data::Protos_MessageInfo >*
      mutable_messageinfo();
  private:
  const ::com::coderzeng::protobuf::data::Protos_MessageInfo& _internal_messageinfo(int index) const;
  ::com::coderzeng::protobuf::data::Protos_MessageInfo* _internal_add_messageinfo();
  public:
  const ::com::coderzeng::protobuf::data::Protos_MessageInfo& messageinfo(int index) const;
  ::com::coderzeng::protobuf::data::Protos_MessageInfo* add_messageinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::coderzeng::protobuf::data::Protos_MessageInfo >&
      messageinfo() const;

  // int32 code = 1;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.coderzeng.protobuf.data.Protos)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::coderzeng::protobuf::data::Protos_MessageInfo > messageinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Protos_MessageInfo

// string path = 1;
inline void Protos_MessageInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Protos_MessageInfo::path() const {
  // @@protoc_insertion_point(field_get:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
  return _internal_path();
}
inline void Protos_MessageInfo::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
}
inline std::string* Protos_MessageInfo::mutable_path() {
  // @@protoc_insertion_point(field_mutable:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
  return _internal_mutable_path();
}
inline const std::string& Protos_MessageInfo::_internal_path() const {
  return path_.GetNoArena();
}
inline void Protos_MessageInfo::_internal_set_path(const std::string& value) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Protos_MessageInfo::set_path(std::string&& value) {
  
  path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
}
inline void Protos_MessageInfo::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
}
inline void Protos_MessageInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
}
inline std::string* Protos_MessageInfo::_internal_mutable_path() {
  
  return path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Protos_MessageInfo::release_path() {
  // @@protoc_insertion_point(field_release:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
  
  return path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Protos_MessageInfo::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:com.coderzeng.protobuf.data.Protos.MessageInfo.path)
}

// -------------------------------------------------------------------

// Protos

// int32 code = 1;
inline void Protos::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Protos::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Protos::code() const {
  // @@protoc_insertion_point(field_get:com.coderzeng.protobuf.data.Protos.code)
  return _internal_code();
}
inline void Protos::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void Protos::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:com.coderzeng.protobuf.data.Protos.code)
}

// repeated .com.coderzeng.protobuf.data.Protos.MessageInfo messageInfo = 2;
inline int Protos::_internal_messageinfo_size() const {
  return messageinfo_.size();
}
inline int Protos::messageinfo_size() const {
  return _internal_messageinfo_size();
}
inline void Protos::clear_messageinfo() {
  messageinfo_.Clear();
}
inline ::com::coderzeng::protobuf::data::Protos_MessageInfo* Protos::mutable_messageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:com.coderzeng.protobuf.data.Protos.messageInfo)
  return messageinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::coderzeng::protobuf::data::Protos_MessageInfo >*
Protos::mutable_messageinfo() {
  // @@protoc_insertion_point(field_mutable_list:com.coderzeng.protobuf.data.Protos.messageInfo)
  return &messageinfo_;
}
inline const ::com::coderzeng::protobuf::data::Protos_MessageInfo& Protos::_internal_messageinfo(int index) const {
  return messageinfo_.Get(index);
}
inline const ::com::coderzeng::protobuf::data::Protos_MessageInfo& Protos::messageinfo(int index) const {
  // @@protoc_insertion_point(field_get:com.coderzeng.protobuf.data.Protos.messageInfo)
  return _internal_messageinfo(index);
}
inline ::com::coderzeng::protobuf::data::Protos_MessageInfo* Protos::_internal_add_messageinfo() {
  return messageinfo_.Add();
}
inline ::com::coderzeng::protobuf::data::Protos_MessageInfo* Protos::add_messageinfo() {
  // @@protoc_insertion_point(field_add:com.coderzeng.protobuf.data.Protos.messageInfo)
  return _internal_add_messageinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::coderzeng::protobuf::data::Protos_MessageInfo >&
Protos::messageinfo() const {
  // @@protoc_insertion_point(field_list:com.coderzeng.protobuf.data.Protos.messageInfo)
  return messageinfo_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace protobuf
}  // namespace coderzeng
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_data_2eproto
